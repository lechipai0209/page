export const content = {
  header: {
    en: {
      name: "PAI LE-CHI",
      title: "Backend Engineer",
      links: {
        github: "GitHub",
        email: "Email",
        phone: "Phone"
      }
    },
    zh: {
      name: "白樂祺",
      title: "後端工程師",
      links: {
        github: "GitHub",
        email: "電子郵件",
        phone: "電話"
      }
    }
  },

  sections: {
    en: {
      workExperience: "Work Experience",
      sideProjects: "Side Projects",
      education: "Education & Research"
    },
    zh: {
      workExperience: "工作經驗",
      sideProjects: "個人專案",
      education: "教育背景與研究"
    }
  },

  workExperience: {
    en: [
      {
        company: "Agtop",
        companyUrl: "https://www.agtop.com.tw/",
        period: "Aug 2024 - Aug 2025",
        location: "Taipei, Taiwan",
        role: "Jr. Backend Engineer",
        description: "Backend Engineer responsible for company backend server setup, API design, CI/CD workflow, and backend management interface. Primarily working with Node.js, also involved in some Python Flask projects. Participated in early-stage planning, mid-stage implementation, and late-stage data maintenance across various projects.",
        projects: [
          {
            title: "ARhero Backend Design",
            subtitle: "Mobile Game App",
            technologies: ["NodeJS", "SQL", "React", "AWS", "Docker"],
            achievements: [
              "Independently developed multimedia API, database schema, business logic, and frontend admin interface.",
              "Leveraged Draw.io to map development workflows, increasing team cooperation efficiency by 30%.",
              "Automated deployment, reducing 50% of time spent on Docker setup and test/product environments switching.",
              "Reduced 40% data collection time by implementing GoAccess to monitor daily API call logs.",
              "Implemented staged data transfer approach: 99% data preservation rate even during API failures through mobile backup and multi-API design.",
              "Reduced meeting frequency by 50% (from 2x to 1x per week) through Swagger API documentation and workflow diagrams, focusing on new issues instead of recurring old problems."
            ],
            architecture: {
              image: "/arhero-architecture.png",
              description: "System Architecture: React + MUI admin panel, Node.js backend with Sequelize ORM connecting to MySQL database. Containerized with Docker and deployed on AWS EC2 with GitLab version control."
            },
            workflow: {
              image: "/workflow.png",
              description: "UGC Game Publishing Workflow: State management diagram for mobile and backend coordination, preventing data inconsistency during user cancellation. All team members follow unified standards for development, database design, and UI modifications."
            },
            monitoring: {
              image: "/goaccess.png",
              description: "API Traffic Monitoring: Implemented GoAccess for automated daily log analysis, reducing data collection setup time by 40%."
            }
          },
          {
            title: "Dental Clinics Services System",
            subtitle: "B2B Project",
            technologies: ["NodeJS", "SQL", "React", "AWS", "Docker", "Line LIFF", "Google Sheet API"],
            achievements: [
              "Reduced 99% paper cost and 60% communication time for both the dental supply company and clinics.",
              "Integrated all APIs into LINE Menu, giving users 100% mobile access to authentication, checks, and bookings.",
              "Sent automated maintenance notifications, reducing clinics' chance of missing service by 50%.",
              "Developed a temporary Google Sheets API before frontend launch, enabling clients to manage backend data and saving 70% of their access/edit time.",
              "Designed database schema separating clinics from members, ensuring 0% historical data loss during staff turnover.",
              "Reduced manual verification workload by 50% through email-based clinic verification while maintaining security.",
              "Prevented malicious member removal by restricting deletion to admin-only operations."
            ],
            lineMenu: {
              images: ["/line-menu.png", "/line-app-1.png", "/line-app-2.png", "/line-app-3.png"],
              description: "LINE LIFF Integration: Full service system accessible through LINE menu, enabling appointment booking, product registration, purchase history viewing, and more. Reduced clinic administrative time by 50% and customer service workforce needs by 20%."
            },
            database: {
              image: "/database-schema.png",
              description: "Database Schema: Clinics entity persists independently of members, maintaining product and maintenance data relationships even without active members. This design ensures historical data preservation during staff transitions."
            }
          },
          {
            title: "AI Tools Research",
            subtitle: "Internal R&D",
            technologies: ["ElasticSearch", "ChromaDB", "LangChain", "MCP", "Text Search", "Cline", "Vector Search", "CLIP Model"],
            achievements: [
              "Tested local small model (Breeze2-8B) and explored applications integrating LangChain and Tool Use.",
              "Provided a local music generation tool, MusicGPT, for ARhero, reducing OpenAI API costs by 80%.",
              "Built a fully local multimedia retrieval system using Elastic Search and CLIP model for cross-format search.",
              "Achieved search accuracy: 98% text-to-text, 82% text-to-image, 70% image-to-image (tested with 500MB/5000 pages).",
              "Reduced search time by 30% compared to manual searching while eliminating data exposure risks to network attacks."
            ],
            searchSystem: {
              image: "/search-system.png",
              description: "Local Search System Architecture: Combines Elastic Search for traditional keyword search with CLIP model for cross-modal retrieval. Supports text-to-text, text-to-image, and image-to-image search with OCR integration for diagram text extraction."
            }
          }
        ]
      }
    ],
    zh: [
      {
        company: "銀濎科技",
        companyUrl: "https://www.agtopnet.com/",
        period: "2024年8月 - 2025年8月",
        location: "台北，台灣",
        role: "後端工程師",
        description: "後端工程師，負責公司後端伺服器建置、API 設計、CI/CD workflow、後端管理平台頁面。主要使用 Node.js，也接觸少數 Python Flask 專案。參與各專案的前期討論規劃、中期實作以及後期的資料維護。",
        projects: [
          {
            title: "ARhero 後端設計",
            subtitle: "手機遊戲應用",
            technologies: ["NodeJS", "SQL", "React", "AWS", "Docker"],
            achievements: [
              "獨立開發多媒體 API、資料庫架構、商業邏輯和前端管理介面。",
              "使用 Draw.io 規劃開發流程，提升團隊合作效率 30%。",
              "自動化部署，減少 50% Docker 設定和測試/正式環境切換時間。",
              "實作 GoAccess 監控每日 API 呼叫日誌，減少 40% 數據收集時間。",
              "實作分段式資料傳遞方式：透過 mobile 備份與多 API 設計，即使在 API 傳送失敗的狀況下，仍能保證 99% 以上資料至少存在 mobile 或雲端上面。",
              "透過 Swagger API 文件整理以及圖像化各式耦合情況，專案開會頻率下降 50%（從一週 2 次降為 1 次），每次會議針對新問題而非反覆討論舊問題。"
            ],
            architecture: {
              image: "/arhero-architecture.png",
              description: "系統架構：React + MUI 管理後台，Node.js 後端使用 Sequelize ORM 連接 MySQL 資料庫。使用 Docker 容器化並部署在 AWS EC2 上，透過 GitLab 進行版本控制。"
            },
            workflow: {
              image: "/workflow.png",
              description: "UGC 遊戲發布流程：Mobile 與 Backend 狀態管理流程圖，避免使用者取消發布時造成後台系統與使用者行為不一致。所有團隊成員遵循同一套標準進行程式設計、資料庫規劃、前端 UI 配合改動。"
            },
            monitoring: {
              image: "/goaccess.png",
              description: "API 流量監控：實作 GoAccess 套件，利用 crontab 排程每日更新流量紀錄的靜態檔案，節省 40% 以上設定資料蒐集的過程和時間。"
            }
          },
          {
            title: "牙科診所服務系統",
            subtitle: "B2B 專案",
            technologies: ["NodeJS", "SQL", "React", "AWS", "Docker", "Line LIFF", "Google Sheet API"],
            achievements: [
              "減少 99% 紙張成本和 60% 溝通時間。",
              "整合所有 API 到 LINE 選單，實現 100% 行動化存取。",
              "自動發送維護通知，減少 50% 診所錯過服務的機率。",
              "開發臨時 Google Sheets API，節省客戶 70% 存取/編輯時間。",
              "設計診所與成員分離的資料庫架構，確保員工異動時歷史資料丟失率降為 0%。",
              "透過 email 驗證機制，相比傳統人工檢查每位成員，減少 50% 的人力與時間，同時保留後台對第一位成員查核的安全性。",
              "移除診所成員僅能透過後台操作，防止診所成員惡意剔除其他成員。"
            ],
            lineMenu: {
              images: ["/line-menu.png", "/line-app-1.png", "/line-app-2.png", "/line-app-3.png"],
              description: "LINE LIFF 整合：完整服務系統透過 LINE 選單存取，可進行帳號註冊、預約維修保養、檢視已購買物件、註冊已購買產品等。牙醫診所減少 50% 預約維修、註冊產品的程序時間，醫材公司降低 20% 真人客服的人力需求。"
            },
            database: {
              image: "/database-schema.png",
              description: "資料庫架構：Clinics 主體持續存在，即便沒有任何成員，仍可保持 products 和 maintenances 資料的關聯。將人員異動使得丟失歷史資料的機率降為 0%。"
            }
          },
          {
            title: "AI 工具研究",
            subtitle: "內部研發",
            technologies: ["ElasticSearch", "ChromaDB", "LangChain", "MCP", "Text Search", "Cline", "Vector Search", "CLIP Model"],
            achievements: [
              "測試本地小模型（Breeze2-8B）並探索 LangChain 和 Tool Use 整合應用。",
              "提供本地音樂生成工具 MusicGPT，減少 80% OpenAI API 成本。",
              "建立完全地端的多媒體資料檢索系統，透過 Elastic Search 配合 CLIP model 實現圖、文交互搜尋。",
              "達成搜尋準確率：以文搜文 98%、以文搜圖 82%、以圖搜圖 70%（500MB/約 5000 頁測試）。",
              "相比無圖文搜尋系統，實測至少減少 30% 以上的搜尋時間，並且完全規避機密資料暴露在網路攻擊下的危險。"
            ],
            searchSystem: {
              image: "/search-system.png",
              description: "地端搜尋系統架構：結合傳統關鍵字搜尋系統 Elastic Search 與 CLIP model，實現跨格式檢索。支援以文搜文、以文搜圖、以圖搜圖，並透過 OCR 工具提取圖表中的文字。"
            }
          }
        ]
      }
    ]
  },

  sideProjects: {
    en: [
      {
        name: "Chain-Split",
        description: "Onchain Bill Split Project",
        status: "Ongoing",
        technologies: ["Rust", "Solana", "Javascript", "Firebase", "React Native", "NoSQL", "Claude code"],
        highlights: [
          "Used Claude code to assist coding, reducing development time by 70%, improving readability.",
          "Implemented Anchor smart contracts for cost sharing, proactively exploring new technologies.",
          "Demonstrated ability to make high-level architectural tradeoffs between on-chain and centralized storage."
        ],
        link: null
      },
      {
        name: "Medium Technical Blog",
        description: "Technical Writing & Knowledge Sharing",
        status: "Ongoing",
        technologies: ["Rust", "Javascript", "Algorithms"],
        highlights: [
          "Authored articles on JavaScript and Rust, explaining foundations through clear, example-driven writing.",
          "Passionate about sharing insights and validating my learning through writing."
        ],
        link: "https://medium.com/@king0209king0209"
      },
      {
        name: "Udemy Course: Javascript Bitcoin Simulator",
        description: "Self-directed Learning Project",
        status: "Completed",
        technologies: ["Javascript", "Redis", "Jest"],
        highlights: [
          "Learned Bitcoin fundamentals from scratch, demonstrating a practice-driven learning approach.",
          "Continuously pursued personal interests and expanded skills through self-directed learning."
        ],
        link: null
      }
    ],
    zh: [
      {
        name: "Chain-Split",
        description: "鏈上分帳專案",
        status: "進行中",
        technologies: ["Rust", "Solana", "Javascript", "Firebase", "React Native", "NoSQL", "Claude code"],
        highlights: [
          "使用 Claude code 輔助編碼，減少 70% 開發時間，提升程式碼可讀性",
          "實作 Anchor 智能合約進行費用分攤，主動探索新技術",
          "展示在鏈上與中心化儲存之間做出高階架構權衡的能力"
        ],
        link: null
      },
      {
        name: "Medium 技術部落格",
        description: "技術寫作與知識分享",
        status: "進行中",
        technologies: ["Rust", "Javascript", "演算法"],
        highlights: [
          "撰寫 JavaScript 和 Rust 相關文章，透過清晰的範例說明基礎概念",
          "熱衷於分享見解，並透過寫作驗證學習成果"
        ],
        link: "https://medium.com/@king0209king0209"
      },
      {
        name: "Udemy 課程：Javascript Bitcoin 模擬器",
        description: "自主學習專案",
        status: "已完成",
        technologies: ["Javascript", "Redis", "Jest"],
        highlights: [
          "從零開始學習比特幣基礎知識，展現實作導向的學習方法",
          "持續追求個人興趣，透過自主學習拓展技能"
        ],
        link: null
      }
    ]
  },

  education: {
    en: {
      university: "National Yang Ming Chiao Tung University",
      degree: "BS, Information Management and Finance",
      period: "Sep 2019 - Sep 2023",
      gpa: "3.9/4.3",
      awards: "Academic Reward × 1",
      english: "TOEFL 95 (R23, L25, S24, W23)",
      researchTitle: "Research Experience",
      research: [
        {
          title: "Research Assistant (One Year)",
          lab: "Explainable AI Lab",
          link: "https://doi.org/10.1016/j.irfa.2023.103005",
          description: "Published research in International Review of Financial Analysis"
        },
        {
          title: "Algorithm Research Project (One Year)",
          topic: "Multiarm Slot Machine",
          link: "https://reurl.cc/YEb0RD",
          description: "Independent research on reinforcement learning algorithms"
        }
      ]
    },
    zh: {
      university: "國立陽明交通大學",
      degree: "資訊管理與財務學系 學士",
      period: "2019年9月 - 2023年9月",
      gpa: "3.9/4.3",
      awards: "書券獎 × 1",
      english: "托福 95 分 (閱讀23, 聽力25, 口說24, 寫作23)",
      researchTitle: "研究經驗",
      research: [
        {
          title: "研究助理（一年",
          lab: "可解釋人工智慧實驗室",
          link: "https://doi.org/10.1016/j.irfa.2023.103005",
          description: "於國際財務分析評論期刊發表研究"
        },
        {
          title: "演算法研究專案（一年）",
          topic: "多臂老虎機問題",
          link: "https://reurl.cc/YEb0RD",
          description: "強化學習演算法的獨立研究"
        }
      ]
    }
  },

  footer: {
    en: "© 2025 Pai Le-Chi. Built with React + Vite",
    zh: "© 2025 白樂祺。使用 React + Vite 構建"
  },

  buttons: {
    en: {
      viewBlog: "View Blog",
      viewPublication: "View Publication",
      systemArchitecture: "System Architecture",
      workflow: "Workflow Diagram",
      monitoring: "API Monitoring",
      lineIntegration: "LINE Integration",
      databaseSchema: "Database Schema",
      searchSystem: "Search System"
    },
    zh: {
      viewBlog: "查看部落格",
      viewPublication: "查看論文",
      systemArchitecture: "系統架構",
      workflow: "工作流程圖",
      monitoring: "API 監控",
      lineIntegration: "LINE 整合",
      databaseSchema: "資料庫架構",
      searchSystem: "搜尋系統"
    }
  }
}
